   public static void multisolver(ArrayList<Edge>[] graph, int src, int dest, boolean[] visited, int criteria, int k, String psf, int wsf) {
      if(src==dest){
         if(spathwt>wsf){
            spathwt= wsf;
            spath = psf;
         }
         if(lpathwt<wsf){
            lpathwt= wsf;
            lpath = psf;
         }
         if(wsf>criteria && wsf<cpathwt){
            cpathwt= wsf;
            cpath= psf;
         }
         if(wsf<criteria && wsf>fpathwt){
            fpathwt= wsf;
            fpath= psf;
         }
         if(pq.size()<k){
            pq.add(new Pair(wsf, psf));
         }else{
            if(wsf> pq.peek().wsf){
               pq.remove();
               pq.add(new Pair(wsf, psf));
            }
         }
         return;
      }
      visited[src]=true;
      for(Edge edge: graph[src]){
         if(visited[edge.nbr]==false){
            multisolver(graph, edge.nbr, dest, visited, criteria, k, psf+edge.nbr, wsf+ edge.wt);
         }
      }
      visited[src]=false;
   }
