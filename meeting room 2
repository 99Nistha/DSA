public static int meetingRooms(int intervals[][]) {
    // write your code here
    if(intervals==null || intervals.length==0) return 0;
    Arrays.sort(intervals, (a,b)-> a[0]- b[0]); // based on there start time
    PriorityQueue<int[]> minHeap= new PriorityQueue<>((a,b)-> a[1]-b[1]);
    //it will contain the meeting that ends the earliest
    minHeap.add(intervals[0]);
    for(int i=1;i<intervals.length;i++){
      int[] earliest= minHeap.remove();
      int[] current= intervals[i];
      if(earliest[1]<=current[0]){
        earliest[1]= current[1];
      }else{
        minHeap.add(intervals[i]);
      }
      minHeap.add(earliest);
    }
    return minHeap.size();
  }
