class MedianFinder {
    PriorityQueue<Integer> minHeap = new PriorityQueue<>();
    PriorityQueue<Integer> maxHeap = new PriorityQueue<>((a,b)->(b-a));
    private boolean even = true;
    
    public MedianFinder() {
    }
    
    public void addNum(int num) {
        if (even) {
            minHeap.add(num);
            maxHeap.add(minHeap.remove());
        } else {
            maxHeap.add(num);
            minHeap.add(maxHeap.remove());
        }
        even = !even;
    }
    
    public double findMedian() {
        if (even)
            return (minHeap.peek() + maxHeap.peek()) / 2.0;
        else
            return maxHeap.peek();
    }
}
