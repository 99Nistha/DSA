class Solution {
    public int findLeastNumOfUniqueInts(int[] arr, int k) {
        HashMap<Integer, Integer> map= new HashMap<>();
        for(int i=0;i<arr.length;i++){
            map.put(arr[i], map.getOrDefault(arr[i], 0)+1);
        }
        
        PriorityQueue<Integer> pq= new PriorityQueue<>(map.values());
        while(k>0){
            k-=pq.poll();
        }
        return k<0? pq.size()+1:pq.size();
    }
}


/*
arr = [4,3,1,1,3,3,2], k = 3
hashmap
times appeared
4      1
2      1
1      2
3      3

priotityQueue
1, 3
*/

//how many times-> hashmap
//k elements-> priority queue
// unique -> sets
//shortedt-> bfs
