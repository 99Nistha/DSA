class Solution {
    public boolean makesquare(int[] matchsticks) {
        int sum=0;
        for(int match: matchsticks) sum+=match;
        if(sum%4!=0) return false;
        int side= sum/4;
        Arrays.sort(matchsticks);
        reverse(matchsticks);
        return dfs(matchsticks, side, 0, new int[4]);
    }
    public boolean dfs(int[] matchsticks, int side, int index, int[] sides){
        if(index==matchsticks.length){
            if(sides[0]==side && sides[1]==side && sides[2]==side && sides[3]==side) return true;
            else return false;
        }
        for(int i=0;i<4;i++){
            if(sides[i]+ matchsticks[index]<=side){
                sides[i]+=matchsticks[index];
                if(dfs(matchsticks, side, index+1, sides)) return true;
                sides[i]-=matchsticks[index];
            }
        }
        return false;
    }
    private void reverse(int[] nums) {
        int i = 0, j = nums.length - 1;
        while (i < j) {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
            i++; j--;
        }
    }
}

