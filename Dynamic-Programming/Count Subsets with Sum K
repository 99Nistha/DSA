Count Subsets with Sum K

public class Solution {
    public static int findWays(int num[], int tar) {
        // Write your code here..
        int n= num.length;
        int[][] dp= new int[n][tar+1];
        return helper(num, tar, n-1, dp);
    }

    public static int helper(int num[], int tar, int index, int[][] dp){
        if(tar==0) return 1;
        if(index==0){
            if(num[0]== tar) return 1;
            else return 0;
        }
        if(dp[index][tar]!=0) return dp[index][tar];
        //not pick
        int notPick= helper(num, tar, index-1, dp);
        //pick
        int pick=0;
        if(num[index]<=tar) pick= helper(num, tar-num[index], index-1, dp);
        return dp[index][tar]= notPick+pick;
    }
}
