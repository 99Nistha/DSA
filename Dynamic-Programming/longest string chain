class Solution {
    public int longestStrChain(String[] words) {
        int n= words.length;
        int[] dp= new int[n];
        Arrays.fill(dp, 1);
        Arrays.sort(words,(a,b)-> a.length()-b.length());
        int max=1;
        for(int i=1; i<n; i++){
            for(int j=0; j<i; j++){
                if(compare(words[i], words[j]) && dp[j]+1>dp[i]){
                    dp[i]= dp[j]+1;
                }
            }
            max= Math.max(max, dp[i]);
        }
        return max;
    }

    public boolean compare(String s1, String s2){
        //s1 is the greater one
        int len1= s1.length();
        int len2= s2.length();
        if(len1!=len2+1) return false;
        int i=0, j=0;
        while(i<len1 && j<len2){
            if(s1.charAt(i)!=s2.charAt(j)){
                i++;
            }else{
                i++;
                j++;
            }
        }
        if(i==j) return true;
        if(i==len1 && j== len2) return true;
        return false;
    }
}
