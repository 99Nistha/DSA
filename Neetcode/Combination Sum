class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans= new ArrayList<>();
        helper(0, ans, candidates, target, new ArrayList<>());
        return ans;
    }
    public void helper(int index, List<List<Integer>> ans, int[] candidates, int target, List<Integer> list){
        System.out.print(target+", ");
        if(target==0){
            ans.add(new ArrayList<>(list));
            return;
        }
        if(target<0 || index==candidates.length) return;
        //pick
        list.add(candidates[index]);
        helper(index, ans, candidates, target-candidates[index], list);
        list.remove(list.size()-1);
        //notPick
        helper(index+1, ans, candidates, target, list);
    }
}
