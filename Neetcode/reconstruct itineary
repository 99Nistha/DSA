class Solution {
    public List<String> findItinerary(List<List<String>> tickets) {
        HashMap<String, PriorityQueue<String>> map= new HashMap<>();
        for(List<String> ticket: tickets){
            if(!map.containsKey(ticket.get(0))) map.put(ticket.get(0), new PriorityQueue<>());
            map.get(ticket.get(0)).add(ticket.get(1));
        }
        LinkedList<String> res= new LinkedList<>();
        dfs("JFK", map, res);
        return res;
    }
    public void dfs(String airport, HashMap<String, PriorityQueue<String>> map, LinkedList<String> res){
        PriorityQueue<String> nbr= map.get(airport);
        while(nbr!=null && !nbr.isEmpty()){
            dfs(nbr.remove(), map, res);
        }
        res.addFirst(airport);
    }
}
