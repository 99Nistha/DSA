tabulation:
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp= new int[m][n];
        Arrays.fill(dp[0], 1);
        for(int[] d: dp) d[0]=1;
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                dp[i][j]= dp[i][j-1]+ dp[i-1][j];
            }
        }
        return dp[m-1][n-1];
    }
}


2d:
class Solution {
    public int uniquePaths(int m, int n) {
        int[] dp= new int[n];
        Arrays.fill(dp, 1);
        for(int i=1; i<m; i++){
            int[] temp= new int[n];
            temp[0]=1;
            for(int j=1; j<n; j++){
                temp[j]= temp[j-1]+ dp[j];
            }
            dp= temp;
        }
        return dp[n-1];
    }
}

1d:
class Solution {
    public int uniquePaths(int m, int n) {
        int[] dp= new int[n];
        Arrays.fill(dp, 1);
        for(int i=1; i<m; i++){
            dp[0]=1;
            for(int j=1; j<n; j++){
                dp[j]= dp[j]+ dp[j-1];
            }
        }
        return dp[n-1];
    }
}
