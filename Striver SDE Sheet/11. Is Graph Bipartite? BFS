//bfs
class Solution {
    public boolean isBipartite(int[][] graph) {
        int[] color= new int[graph.length];
        Queue<Integer> q= new LinkedList<>();
        for(int i=0;i<graph.length;i++){
            if(color[i]==0) 
                if(!bfs(i, q, color, graph)) return false;
        }
        return true;
    }
    
    public boolean bfs(int node, Queue<Integer> q, int[] color, int[][] graph){
        q.add(node);
        color[node]=-1;
        while(!q.isEmpty()){
            int curr= q.remove();
            for(int it: graph[curr]){
                if(color[it]!=0){
                    if(color[it]==color[curr]) return false;
                }else{
                    q.add(it);
                    color[it]= -color[curr];
                }
            }
        }
        return true;
    }
}
