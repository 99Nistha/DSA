Next permutation:
1.  find all the permutations: 
                    1. all possible combos, and iterate o(n^2)
2. Another method
                    1. tarverse from back
                    2. 1. a[i]<a[i+1] i-> first index the break point|  O(n)
                    3. 2. a[ind]> a[i] ind-> second index| O(n)
                    4. 3. swap(a[i], a[ind])
                    5. 4. reverse from i+1 to n-1| o(n)
                    6. time-> o(n)
                    7. space-> o(1)

```
1 3 5 4 2
                             5
                          3      4
                    1                2

i->3 is the breakpoint here
now traverse from back and get the first value greater than 3, that is 4
                             5
                         3      4
                    1                2
swap 3 and 4
                             5
                        4        3
                    1                2
reverse from i+1 to n-1
                             2
                        4       3
                    1                5


one more ex:  1 5 2 4 3->    1 5 3 2 4
                                 4                         4                          4                       2
                              2     3        ->         2     3  ->                 3    2  ->              3    4      ->  1 5 3 2 4
                           5                          5                           5                       5
                         1                          1                           1                       1

************************************************
class Solution {
    public void nextPermutation(int[] A) {
        if(A==null || A.length<=1) return;
        int i= A.length-2;
        while(i>=0 && A[i]>=A[i+1])i--;
        if(i>=0){
            int j= A.length-1;
            while(A[j]<=A[i])j--;
            swap(A, i, j);
        }
        reverse(A, i+1, A.length-1);
    }
    public void swap(int[] A, int i, int j){
        int temp= A[i];
        A[i]= A[j];
        A[j]= temp;
    }
    
    public void reverse(int[] A, int i, int j){
        while(i<j) swap(A, i++, j--);
    }
}

```
