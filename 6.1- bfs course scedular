class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        ArrayList<ArrayList<Integer>> adj= new ArrayList<>();
        int[] degree= new int[numCourses];
        for(int i=0;i<numCourses;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<prerequisites.length;i++){
            adj.get(prerequisites[i][0]).add(prerequisites[i][1]);
            degree[prerequisites[i][1]]++;
        }
        if(isTopoLogicalSort(numCourses, adj, degree))return true;
        else return false;
    }
    
    public boolean isTopoLogicalSort(int N, ArrayList<ArrayList<Integer>> adj, int[] degree){
        Queue<Integer> q= new LinkedList<>();
        for(int i=0;i<N;i++){
            if(degree[i]==0) q.add(i);
        }
        
        int index=0;
        while(!q.isEmpty()){
            int curr=q.remove();
            index++;
            for(int it: adj.get(curr)){
                degree[it]--;
                if(degree[it]==0) q.add(it);
            }
        }
        return index==N;
    }
}
