class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] indegree= new int[V];
        int[] sol= new int[V];
        int i=0;
        for(int j=0; j<V; j++){
            for(int nbr: adj.get(j)) indegree[nbr]++;
        }
        Queue<Integer> queue= new LinkedList<>();
        for(int j=0; j<V; j++){
            if(indegree[j]==0) queue.add(j);
        }
        while(!queue.isEmpty()){
            int size= queue.size();
            while(size!=0){
                size--;
                int node= queue.poll();
                for(int nbr: adj.get(node)){
                    indegree[nbr]--;
                }
                sol[i]= node;
                indegree[node]--;
                i++;
            }
            for(int j=0; j<V; j++){
                if(indegree[j]==0) queue.add(j);
            }
        }
        return sol;
    }
}
