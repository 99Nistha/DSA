class Solution {
    public int leastInterval(char[] tasks, int n) {
        HashMap<Character, Integer> map= new HashMap<>();
        for(char task: tasks){
            map.put(task, map.getOrDefault(task, 0)+1);
        }
        //maxHeap
        PriorityQueue<Integer> pq= new PriorityQueue<>((a,b)-> b-a);
        pq.addAll(map.values());
        
        int cycle=0;
        while(!pq.isEmpty()){
            List<Integer> temp= new ArrayList<>();
            for(int i=0;i<n+1;i++){
                if(!pq.isEmpty()) temp.add(pq.remove());
            }
            for(int i:temp){
                if(--i>0) pq.add(i);
            }
            cycle+= pq.isEmpty()?temp.size(): n+1;
        }
        return cycle;
    }
}
